{"_id":"socket.io-client","_rev":"84-b3409b682d433c3860f95c16b5fedec5","name":"socket.io-client","description":"Socket.IO client for the browser and node.js","dist-tags":{"latest":"0.9.16"},"versions":{"0.7.0":{"name":"socket.io-client","description":"Realtime apps made cross-browser & easy with a WebSocket-like API","version":"0.7.0","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.7.0","socket.io-client":"0.7.0"},"engines":{"node":">= 0.4.0"},"_id":"socket.io-client@0.7.0","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.8","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"d3b33a70c2a72f0dbb2dca511c364d3d36728cfa","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.7.0.tgz"},"scripts":{},"directories":{}},"0.7.1":{"name":"socket.io-client","description":"Realtime apps made cross-browser & easy with a WebSocket-like API","version":"0.7.1","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.7.1","socket.io-client":"0.7.1"},"engines":{"node":">= 0.4.0"},"_id":"socket.io-client@0.7.1","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.8","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"0017aee9bdd644224daba5961224ef621a1840f4","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.7.1.tgz"},"scripts":{},"directories":{}},"0.7.2":{"name":"socket.io-client","description":"Realtime apps made cross-browser & easy with a WebSocket-like API","version":"0.7.2","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.7.1","socket.io-client":"0.7.1"},"engines":{"node":">= 0.4.0"},"_id":"socket.io-client@0.7.2","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.8","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"8db4e1dbb62a4dda02b66fe92d35387701c3bdcc","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.7.2.tgz"},"scripts":{},"directories":{}},"0.7.3":{"name":"socket.io-client","description":"Realtime apps made cross-browser & easy with a WebSocket-like API","version":"0.7.3","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.7.3","socket.io-client":"0.7.1"},"engines":{"node":">= 0.4.0"},"_id":"socket.io-client@0.7.3","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.8","_nodeVersion":"v0.4.9","_defaultsLoaded":true,"dist":{"shasum":"690c42c6de78a8cf3c619e7e2d2e4c3f609c8733","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.7.3.tgz"},"scripts":{},"directories":{}},"0.7.4":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.7.4","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"dependencies":{"uglify-js":"1.0.3"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.7.7","socket.io-client":"0.7.4"},"engines":{"node":">= 0.4.0"},"_id":"socket.io-client@0.7.4","_engineSupported":true,"_npmVersion":"1.0.8","_nodeVersion":"v0.4.9","_defaultsLoaded":true,"dist":{"shasum":"0d6c3865f9960cc0f5c03e27414e7969be717f7c","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.7.4.tgz"},"scripts":{},"directories":{}},"0.7.5":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.7.5","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.7.8","socket.io-client":"0.7.4"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.7.5/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.7.5","_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"b3b2420088016ddced1ff20c3bc999272ba6b1bf","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.7.5.tgz"},"scripts":{},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.7.9":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.7.9","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.7.9","socket.io-client":"0.7.9"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.7.9/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.7.9","_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"770408324905d7289ec0e92e7ca2ea6f71806292","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.7.9.tgz"},"scripts":{},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.7.10":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.7.10","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.7.10","socket.io-client":"0.7.10"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.7.10/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.7.10","_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"ce9720e511cde60e5d0addb198efc21d0c04e4ac","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.7.10.tgz"},"scripts":{},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.7.11":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.7.11","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.7.11","socket.io-client":"0.7.11"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.7.11/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.7.11","_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"3a33dad620e7d65dbaf3dfafc81fdb690828cf73","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.7.11.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.8.0":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.8.0","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.8.0","socket.io-client":"0.8.0"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.8.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.8.0","_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"164c34ec8b93ba3ccd6c39b4dc706a868f828d41","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.8.0.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.8.1":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.8.1","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.8.1","socket.io-client":"0.8.1"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.8.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.8.1","_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"0c429f47f8f5aaede19ed3e9ee2387f1851e0aec","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.8.1.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.8.2":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.8.2","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/Socket.IO.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.8.2","socket.io-client":"0.8.2"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.8.2/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.8.2","_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"613a8d9348fedc3eb148cd88c9d83526455c1a41","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.8.2.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.8.3":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.8.3","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.8.3","socket.io-client":"0.8.3"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.8.3/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.8.3","_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"ddce56873071864b42e21c4ae2258722b0f42c44","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.8.3.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.8.4":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.8.4","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.8.4","socket.io-client":"0.8.4"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.8.4/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.8.4","_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"efaa12ee5ad2e605e930b5ae13dd42678a43ba92","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.8.4.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.8.5":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.8.5","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.8.5","socket.io-client":"0.8.5"},"engines":{"node":">= 0.4.0"},"_npmJsonOpts":{"file":"/Users/guillermo/.npm/socket.io-client/0.8.5/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"socket.io-client@0.8.5","_engineSupported":true,"_npmVersion":"1.0.30","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"39145a661cbc6f258c34b23bab7d0b4bea8b737e","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.8.5.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.8.6":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.8.6","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.8.6","socket.io-client":"0.8.6"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.8.6","_engineSupported":true,"_npmVersion":"1.0.99","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"58b603d3eebfa6ae4220720ce71eddc95eb6d010","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.8.6.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.8.7":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.8.7","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.0.6","websocket-client":"1.0.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"0.7.7","express":"2.3.11","jade":"0.12.1","stylus":"0.13.3","socket.io":"0.8.7","socket.io-client":"0.8.7"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.8.7","_engineSupported":true,"_npmVersion":"1.0.99","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"61c5953acbefebcd45dd47d0c8b1ad8a5bf86e1b","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.8.7.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.0":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.0","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.0","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.0","socket.io-client":"0.9.0"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.0","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"9af6c8e99f1594931a339f9e63f67e3c45347b88","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.0.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.1":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.1","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.2.2"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.1","socket.io-client":"0.9.1","active-x-obfuscator":"0.0.1"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.1","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.11","_defaultsLoaded":true,"dist":{"shasum":"4a97c0851a8d40f29966fdfdb62ae33247409091","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.1.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.1-1":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.1-1","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.2.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.1-1","socket.io-client":"0.9.1-1"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.1-1","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.11","_defaultsLoaded":true,"dist":{"shasum":"54a396e8e22ab7ec4800266e074518612e2f4aa9","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.1-1.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.2":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.2","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.2.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.2","socket.io-client":"0.9.2"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.2","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.11","_defaultsLoaded":true,"dist":{"shasum":"73607cc129a564468bef59567cc620c0c6a6f494","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.2.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.3":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.3","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.2.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.3","socket.io-client":"0.9.3"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.3","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.11","_defaultsLoaded":true,"dist":{"shasum":"e6a47f677d2720d98fcb9ab5e32dbb2fe18ab4c4","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.3.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.4":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.4","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.2.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.4","socket.io-client":"0.9.4"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.4","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.11","_defaultsLoaded":true,"dist":{"shasum":"cdb37eb7584c7030ad8376e01a2e312242de0ac8","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.4.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.5":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.5","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.2.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.5","socket.io-client":"0.9.5"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.5","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.13","_defaultsLoaded":true,"dist":{"shasum":"8ba9bd3735de006a5b831bca59a2e5cbc30fa53c","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.5.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.6":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.6","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.2.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.6","socket.io-client":"0.9.6"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.6","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.13","_defaultsLoaded":true,"dist":{"shasum":"068b36b9b3f3950117c990bda875af943aeede8a","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.6.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.7":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.7","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.2.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.7","socket.io-client":"0.9.7"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.7","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.2","_defaultsLoaded":true,"dist":{"shasum":"67dfb3a1700f7d1f94d352af155a060b79643e60","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.7.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.8":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.8","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.2.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.8","socket.io-client":"0.9.8"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.8","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.2","_defaultsLoaded":true,"dist":{"shasum":"454a1cb4194740531ac23f966e98dc87cd713e28","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.8.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.9":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.9","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.4.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.9","socket.io-client":"0.9.9"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.9","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.2","_defaultsLoaded":true,"dist":{"shasum":"37cbc7973de9cd5e8b69e8f109236a6b9c3569bc","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.9.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.10":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.10","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"git://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.4.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.10","socket.io-client":"0.9.10"},"engines":{"node":">= 0.4.0"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_id":"socket.io-client@0.9.10","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.2","_defaultsLoaded":true,"dist":{"shasum":"3c2d32debd4a4509b44219b09ac06ba96aaa3408","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.10.tgz"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.11":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.11","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"https://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.4.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.11","socket.io-client":"0.9.11","should":"*"},"engines":{"node":">= 0.4.0"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"socket.io-client@0.9.11","dist":{"shasum":"94defc1b29e0d8a8fe958c1cf33300f68d8a19c7","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.11.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.15":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.15","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"https://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.4.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.15","socket.io-client":"0.9.15","should":"*"},"engines":{"node":">= 0.4.0"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"README.md","_id":"socket.io-client@0.9.15","dist":{"shasum":"336e51c1b3150fd76be7707f3de6ad06a663699a","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.15.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}},"0.9.16":{"name":"socket.io-client","description":"Socket.IO client for the browser and node.js","version":"0.9.16","main":"./lib/io.js","browserify":"./dist/socket.io.js","homepage":"http://socket.io","keywords":["websocket","socket","realtime","socket.io","comet","ajax"],"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"contributors":[{"name":"Guillermo Rauch","email":"rauchg@gmail.com"},{"name":"Arnout Kazemier","email":"info@3rd-eden.com"},{"name":"Vladimir Dronnikov","email":"dronnikov@gmail.com"},{"name":"Einar Otto Stangvik","email":"einaros@gmail.com"}],"repository":{"type":"git","url":"https://github.com/LearnBoost/socket.io-client.git"},"dependencies":{"uglify-js":"1.2.5","ws":"0.4.x","xmlhttprequest":"1.4.2","active-x-obfuscator":"0.0.1"},"devDependencies":{"expresso":"*","express":"2.5.x","jade":"*","stylus":"*","socket.io":"0.9.16","socket.io-client":"0.9.16","should":"*"},"engines":{"node":">= 0.4.0"},"readme":"socket.io\n=========\n\n#### Sockets for the rest of us\n\nThe `socket.io` client is basically a simple HTTP Socket interface implementation.\nIt looks similar to WebSocket while providing additional features and\nleveraging other transports when WebSocket is not supported by the user's\nbrowser.\n\n```js\nvar socket = io.connect('http://domain.com');\nsocket.on('connect', function () {\n  // socket connected\n});\nsocket.on('custom event', function () {\n  // server emitted a custom event\n});\nsocket.on('disconnect', function () {\n  // socket disconnected\n});\nsocket.send('hi there');\n```\n\n### Recipes\n\n#### Utilizing namespaces (ie: multiple sockets)\n\nIf you want to namespace all the messages and events emitted to a particular\nendpoint, simply specify it as part of the `connect` uri:\n\n```js\nvar chat = io.connect('http://localhost/chat');\nchat.on('connect', function () {\n  // chat socket connected\n});\n\nvar news = io.connect('/news'); // io.connect auto-detects host\nnews.on('connect', function () {\n  // news socket connected\n});\n```\n\n#### Emitting custom events\n\nTo ease with the creation of applications, you can emit custom events outside\nof the global `message` event.\n\n```js\nvar socket = io.connect();\nsocket.emit('server custom event', { my: 'data' });\n```\n\n#### Forcing disconnection\n\n```js\nvar socket = io.connect();\nsocket.on('connect', function () {\n  socket.disconnect();\n});\n```\n\n### Documentation \n\n#### io#connect\n\n```js\nio.connect(uri, [options]);\n```\n\n##### Options:\n\n- *resource*\n\n    socket.io\n\n  The resource is what allows the `socket.io` server to identify incoming connections by `socket.io` clients. In other words, any HTTP server can implement socket.io and still serve other normal, non-realtime HTTP requests.\n\n- *transports*\n\n```js\n['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart', 'xhr-polling', 'jsonp-polling']\n```\n\n  A list of the transports to attempt to utilize (in order of preference).\n\n- *'connect timeout'*\n\n```js\n5000\n```\n\n  The amount of milliseconds a transport has to create a connection before we consider it timed out.\n  \n- *'try multiple transports'*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should try other transports when the  connectTimeout occurs.\n  \n- *reconnect*\n\n```js\ntrue\n```\n\n  A boolean indicating if we should automatically reconnect if a connection is disconnected. \n  \n- *'reconnection delay'*\n\n```js\n500\n```\n\n  The amount of milliseconds before we try to connect to the server again. We are using a exponential back off algorithm for the following reconnections, on each reconnect attempt this value will get multiplied (500 > 1000 > 2000 > 4000 > 8000).\n  \n\n- *'max reconnection attempts'*\n\n```js\n10\n```\n\n  The amount of attempts should we make using the current transport to connect to the server? After this we will do one final attempt, and re-try with all enabled transport methods before we give up.\n\n##### Properties:\n\n- *options*\n\n  The passed in options combined with the defaults.\n\n- *connected*\n\n  Whether the socket is connected or not.\n  \n- *connecting*\n\n  Whether the socket is connecting or not.\n\n- *reconnecting*\n\n  Whether we are reconnecting or not.\n  \n- *transport*  \n\n  The transport instance.\n\n##### Methods:\n  \n- *connect(λ)*\n\n  Establishes a connection. If λ is supplied as argument, it will be called once the connection is established.\n  \n- *send(message)*\n  \n  A string of data to send.\n  \n- *disconnect*\n\n  Closes the connection.\n  \n- *on(event, λ)*\n\n  Adds a listener for the event *event*.\n\n- *once(event, λ)*\n\n  Adds a one time listener for the event *event*. The listener is removed after the first time the event is fired.\n  \n- *removeListener(event, λ)*\n\n  Removes the listener λ for the event *event*.\n  \n##### Events:\n\n- *connect*\n\n  Fired when the connection is established and the handshake successful.\n  \n- *connecting(transport_type)*\n\n    Fired when a connection is attempted, passing the transport name.\n  \n- *connect_failed*\n\n    Fired when the connection timeout occurs after the last connection attempt.\n  This only fires if the `connectTimeout` option is set.\n  If the `tryTransportsOnConnectTimeout` option is set, this only fires once all\n  possible transports have been tried.\n  \n- *message(message)*\n  \n  Fired when a message arrives from the server\n\n- *close*\n\n  Fired when the connection is closed. Be careful with using this event, as some transports will fire it even under temporary, expected disconnections (such as XHR-Polling).\n  \n- *disconnect*\n\n  Fired when the connection is considered disconnected.\n  \n- *reconnect(transport_type,reconnectionAttempts)*\n\n  Fired when the connection has been re-established. This only fires if the `reconnect` option is set.\n\n- *reconnecting(reconnectionDelay,reconnectionAttempts)*\n\n  Fired when a reconnection is attempted, passing the next delay for the next reconnection.\n\n- *reconnect_failed*\n\n  Fired when all reconnection attempts have failed and we where unsuccessful in reconnecting to the server.  \n\n### Contributors\n\nGuillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nArnout Kazemier &lt;info@3rd-eden.com&gt;\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"README.md","_id":"socket.io-client@0.9.16","dist":{"shasum":"4da7515c5e773041d1b423970415bcc430f35fc6","tarball":"http://registry.npmjs.org/socket.io-client/-/socket.io-client-0.9.16.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"directories":{}}},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"time":{"0.7.0":"2011-06-21T12:39:56.789Z","0.7.1":"2011-06-22T00:08:16.329Z","0.7.2":"2011-06-22T07:12:49.245Z","0.7.3":"2011-06-30T13:31:13.489Z","0.7.4":"2011-07-12T07:59:42.687Z","0.7.5":"2011-08-08T15:11:34.934Z","0.7.9":"2011-08-12T17:17:55.369Z","0.7.10":"2011-08-27T18:38:28.273Z","0.7.11":"2011-08-27T22:28:19.256Z","0.8.0":"2011-08-28T22:39:25.536Z","0.8.1":"2011-08-29T16:39:12.210Z","0.8.2":"2011-08-29T17:33:53.591Z","0.8.3":"2011-09-03T21:06:42.929Z","0.8.4":"2011-09-06T14:47:27.498Z","0.8.5":"2011-10-07T18:22:52.650Z","0.8.6":"2011-10-27T11:10:43.587Z","0.8.7":"2011-11-05T20:47:48.670Z","0.9.0":"2012-02-26T20:41:51.085Z","0.9.1":"2012-03-02T11:13:38.853Z","0.9.1-1":"2012-03-02T11:39:46.751Z","0.9.2":"2012-03-13T13:53:15.705Z","0.9.3":"2012-03-28T12:50:59.173Z","0.9.4":"2012-04-01T04:46:07.238Z","0.9.5":"2012-04-05T17:35:54.855Z","0.9.6":"2012-04-17T22:56:57.387Z","0.9.7":"2012-07-24T18:19:51.782Z","0.9.8":"2012-07-25T00:35:51.160Z","0.9.9":"2012-08-01T22:13:45.019Z","0.9.10":"2012-08-10T20:52:20.380Z","0.9.11":"2012-11-02T15:03:07.113Z","0.9.15":"2013-06-06T15:22:19.014Z","0.9.16":"2013-06-06T15:38:58.547Z"},"author":{"name":"Guillermo Rauch","email":"guillermo@learnboost.com"},"repository":{"type":"git","url":"https://github.com/LearnBoost/socket.io-client.git"},"users":{"sjonnet":true,"fgribreau":true,"sjonnet19":true,"m42am":true,"chevex":true},"_attachments":{"socket.io-client-0.9.16.tgz":{"content_type":"application/octet-stream","revpos":83,"digest":"md5-2HE2xgXvs3gWfk1Wgvpkjw==","length":1015979,"stub":true},"socket.io-client-0.9.15.tgz":{"content_type":"application/octet-stream","revpos":81,"digest":"md5-4hXRiZcmOVUk2VCeaxdaPQ==","length":1015960,"stub":true},"socket.io-client-0.9.11.tgz":{"content_type":"application/octet-stream","revpos":79,"digest":"md5-d6+6vuOVrfvakns65P8dGg==","length":996229,"stub":true},"socket.io-client-0.9.10.tgz":{"content_type":"application/octet-stream","revpos":72,"digest":"md5-u43Q/OJ00E98ODUZhsuXRw==","length":995979,"stub":true},"socket.io-client-0.9.9.tgz":{"content_type":"application/octet-stream","revpos":67,"digest":"md5-nUzO/6y6aA9/KEQcdtY1oQ==","length":995948,"stub":true},"socket.io-client-0.9.8.tgz":{"content_type":"application/octet-stream","revpos":64,"digest":"md5-1evAq/kaqi5LZyBjpFePnw==","length":995678,"stub":true},"socket.io-client-0.9.7.tgz":{"content_type":"application/octet-stream","revpos":62,"digest":"md5-kSQysNvMWV2prWDDaZB+0A==","length":995672,"stub":true},"socket.io-client-0.9.6.tgz":{"content_type":"application/octet-stream","revpos":60,"digest":"md5-nicNE9vxrnmDU/N5wk8iGg==","length":996451,"stub":true},"socket.io-client-0.9.5.tgz":{"content_type":"application/octet-stream","revpos":55,"digest":"md5-UIw+WEjAu1mN5v1KWEi/vw==","length":996388,"stub":true},"socket.io-client-0.9.4.tgz":{"content_type":"application/octet-stream","revpos":53,"digest":"md5-7Gjp187qJmNDjZGuM6HK7Q==","length":996362,"stub":true},"socket.io-client-0.9.3.tgz":{"content_type":"application/octet-stream","revpos":51,"digest":"md5-T1trNCrjdRi0wUxFn9s8Eg==","length":996248,"stub":true},"socket.io-client-0.9.2.tgz":{"content_type":"application/octet-stream","revpos":49,"digest":"md5-44kTBqvUMIRL0po1zwyCgA==","length":995985,"stub":true},"socket.io-client-0.9.1-1.tgz":{"content_type":"application/octet-stream","revpos":45,"digest":"md5-pqGpqPo7YNYEtj2tDYbghg==","length":995963,"stub":true},"socket.io-client-0.9.1.tgz":{"content_type":"application/octet-stream","revpos":43,"digest":"md5-6X+rmgETZ5w5rSrOR34VRA==","length":995923,"stub":true},"socket.io-client-0.9.0.tgz":{"content_type":"application/octet-stream","revpos":41,"digest":"md5-HqTS18IHowRYfWY87W3JNw==","length":995375,"stub":true},"socket.io-client-0.8.7.tgz":{"content_type":"application/octet-stream","revpos":39,"digest":"md5-PzOEreQHpCqWXegjN7S8fg==","length":1075200,"stub":true},"socket.io-client-0.8.6.tgz":{"content_type":"application/octet-stream","revpos":37,"digest":"md5-PAx471YuI17hsNtiNgg+5w==","length":1075200,"stub":true},"socket.io-client-0.8.5.tgz":{"content_type":"application/octet-stream","revpos":35,"digest":"md5-junt9Ijy7/0SWxl5Kl0H0g==","length":1036413,"stub":true},"socket.io-client-0.8.4.tgz":{"content_type":"application/octet-stream","revpos":33,"digest":"md5-q0a4axPbDScfIdU3ai9tUg==","length":1037495,"stub":true},"socket.io-client-0.8.3.tgz":{"content_type":"application/octet-stream","revpos":31,"digest":"md5-5r0uN/jdLC14Tb5WDoBmSw==","length":1036602,"stub":true},"socket.io-client-0.8.2.tgz":{"content_type":"application/octet-stream","revpos":29,"digest":"md5-FyT4Vgbt4JGGTgIZh0HVMw==","length":1036363,"stub":true},"socket.io-client-0.8.1.tgz":{"content_type":"application/octet-stream","revpos":27,"digest":"md5-IIJ72bQfucSeDOnducbM0w==","length":1037282,"stub":true},"socket.io-client-0.8.0.tgz":{"content_type":"application/octet-stream","revpos":25,"digest":"md5-QQp6XOa0OWxJAq+EOtZ3lg==","length":1036209,"stub":true},"socket.io-client-0.7.11.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-Twmc+D4ZrFBfMD2YAOOe8g==","length":1036370,"stub":true},"socket.io-client-0.7.10.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-u5Uy2j1vqEI8W8okDuZ6NA==","length":1036222,"stub":true},"socket.io-client-0.7.9.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-zSAwECc2WK3ArilFJXDGKQ==","length":1036151,"stub":true},"socket.io-client-0.7.5.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-JwFKXvVg8nleobFwvkXGUA==","length":1036243,"stub":true},"socket.io-client-0.7.4.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-d340EG8k4loqloXFXxLLCA==","length":986756,"stub":true},"socket.io-client-0.7.3.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-D4aWOyVwU+GXDj+3c2YCQw==","length":1033943,"stub":true},"socket.io-client-0.7.2.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-NB3QM4hGH7C49EdGsYa1jw==","length":1035207,"stub":true},"socket.io-client-0.7.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-Yo6E8OKnf156RPv0/ziytQ==","length":1035578,"stub":true},"socket.io-client-0.7.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-uAWvpdllSmT+C1oEn2fy4A==","length":1033886,"stub":true}},"_etag":"\"52YG8BDFPF82NWT7Y9AZ3FVJ5\""}